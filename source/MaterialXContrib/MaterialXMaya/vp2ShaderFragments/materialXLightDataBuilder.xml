<fragment uiName="materialXLightDataBuilder" name="materialXLightDataBuilder" type="plumbing" class="ShadeFragment" version="1.0" feature_level="0">
    <description><![CDATA[Accumulates Maya lights into a MaterialX compatible structure.]]></description>
    <properties>
        <float3 name="L" flags="varyingInputParam" />
        <int name="lightType" />
        <float3 name="diffuseI" />
        <float3 name="specularI" />
    </properties>
    <values>
    </values>
    <outputs>
        <float3 name="outColor" />
    </outputs>
    <implementation>
        <implementation render="OGSRenderer" language="GLSL" lang_version="3.0">
            <function_name val="materialXLightDataBuilder" />
            <source>
                <![CDATA[
struct LightData
{
 int type;
 vec3 direction;
 vec3 color;
 float intensity;
};

int g_numActiveLightSources = 0;
LightData g_lightData[16];
vec3 g_diffuseI;
vec3 g_specularI;

#define LIGHT_TYPE_AI_AREA_LIGHT 0x00115C86
vec3 materialXLightDataBuilder(
    vec3 L,
    int lightType,
    vec3 diffuseI,
    vec3 specularI
)
{
    if (lightType == LIGHT_TYPE_AI_AREA_LIGHT) {
        g_diffuseI = diffuseI;
        g_specularI = specularI;        
    } else {
        g_lightData[g_numActiveLightSources].type = 1;
        g_lightData[g_numActiveLightSources].direction = -L;
        g_lightData[g_numActiveLightSources].color = diffuseI;
        g_lightData[g_numActiveLightSources].intensity = 1.0f;
        g_numActiveLightSources = g_numActiveLightSources + 1;
    }
    return diffuseI;
}
                ]]>
            </source>
        </implementation>
    </implementation>
</fragment>
